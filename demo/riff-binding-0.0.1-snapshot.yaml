apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: riff-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: secretmappings.binding.projectriff.io
spec:
  group: binding.projectriff.io
  names:
    kind: SecretMapping
    plural: secretmappings
  scope: ""
  validation:
    openAPIV3Schema:
      description: SecretMapping is the Schema for the secretmappings API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: SecretMappingSpec defines the desired state of SecretMapping
          properties:
            bindingPrefix:
              description: BindingPrefix is the prefix that will be prepended to the
                credentials properties
              type: string
            bindingSecret:
              description: BindingSecret is the name of the Binding Secret that is
                created with the credentials
              type: string
            host:
              description: Host is the hostname or IP address for the service
              type: string
            hostKey:
              description: HostKey is the key for the host in the secret specified
                by SecretRef
              type: string
            passwordKey:
              description: PasswordKey is the key for the password in the secret specified
                by SecretRef
              type: string
            port:
              description: Port is the port used by the service
              type: integer
            portKey:
              description: PortKey is the key for the port in the secret specified
                by SecretRef
              type: string
            secretRef:
              description: SecretRef is a reference to a Secret containing the credentials
              type: string
            serviceInstance:
              description: ServiceInstance is the instance name  of the service
              type: string
            serviceInstanceKey:
              description: ServiceInstanceKey is the key for the service instance
                name in the secret specified by SecretRef
              type: string
            serviceType:
              description: ServiceType is the type of the service, like 'mysql' or
                'mongodb' etc.
              type: string
            serviceTypeKey:
              description: ServiceTypeKey is the key for the service type in the secret
                specified by SecretRef
              type: string
            uri:
              description: URI is the service URI that can be used to connect to the
                service
              type: string
            uriKey:
              description: URIKey is the key for the URI in the secret specified by
                SecretRef
              type: string
            username:
              description: Username is the username to use for connecting to the service
              type: string
            usernameKey:
              description: UsernameKey is the key for the username in the secret specified
                by SecretRef
              type: string
          type: object
        status:
          description: SecretMappingStatus defines the observed state of SecretMapping
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: riff-binding-leader-election-role
  namespace: riff-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: riff-binding-manager-role
rules:
- apiGroups:
  - binding.projectriff.io
  resources:
  - secretmappings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - binding.projectriff.io
  resources:
  - secretmappings/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: riff-binding-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: riff-binding-leader-election-rolebinding
  namespace: riff-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: riff-binding-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: riff-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: riff-binding-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: riff-binding-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: riff-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: riff-binding-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: riff-binding-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: riff-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    control-plane: controller-manager
  name: riff-binding-controller-manager-metrics-service
  namespace: riff-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: riff-binding-controller-manager
  namespace: riff-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: trisberg/binding-controller:latest
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
